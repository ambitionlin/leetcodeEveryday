//归并排序 时间复杂度O(N*logN)   额外空间复杂度O(N)   思路：分治
public class MergeSort{
    public static void mergeSort(int[] array) {
        if(array==null ||array.length<2) return;
        sortProcess(array,0,array.length-1);
    }
    public static void sortProcess(int[] array, int L, int R){
        if(L==R) return;
        int mid = L+((R-L)>>1);  //位运算较快，右移= 除以2
        sortProcess(array,L,mid);
        sortProcess(array,mid+1,R);
        mergeSort(array,L,mid,R);
    }
    public static void mergeSort(int[] array, int L, int mid, int R){
        int[] help = new int[R-L+1];
        int i=0, p1=L, p2=mid+1;
        while(p1<=mid && p2<=R){
            help[i++] = array[p1]<array[p2]?array[p1++]:array[p2++];
        }
        while(p1<=mid) help[i++]=array[p1++];
        while (p2<=R) help[i++] = array[p2++];
        for(int i=0;i<help.length;i++){
            array[L+i]=help[i];
        }
    }
}